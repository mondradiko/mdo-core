name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash
jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
          #- os: windows-latest
          #  cc: cl.exe
          #  cxx: cl.exe
    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: install ninja-build tool
        uses: mondradiko/gha-setup-ninja@v3

      - name: setup VsDev environment
        if: runner.os == 'Windows'
        uses: mondradiko/gha-setup-vsdevenv@v3

      - name: apt
        if: runner.os == 'Linux'
        run: sudo apt install \
          libuv1-dev libvulkan-dev libopenxr-dev libsdl2-dev

      - name: cached vcpkg runtime
        if: runner.os == 'Linux'
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ hashFiles('.git/modules/vcpkg/HEAD') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('vcpkg/.git/HEAD') }}
          path: vcpkg/vcpkg

      - name: setup environment vars
        run: |
          CACHE_KEY=$(echo "${{ runner.os }}-${{ github.head_ref }}" | tr -cd '[a-zA-Z0-9]._-')
          echo "CACHE_KEY=$CACHE_KEY" | tee -a $GITHUB_ENV
          if [ "${{ runner.os }}" == "Linux" ]; then
            echo "ci_vcpkg_cache_dir=/home/runner/.cache/vcpkg" >> $GITHUB_ENV
          else
            echo "ci_vcpkg_cache_dir=$LOCALAPPDATA/vcpkg" >> $GITHUB_ENV
          fi

      - name: dependency binary cache
        uses: actions/cache@v2
        with:
          path: ${{ env.ci_vcpkg_cache_dir }}
          key: ${{ env.CACHE_KEY }}-vcpkg-binarycache4
          restore-keys: ${{ env.CACHE_KEY }}-vcpkg-binarycache3

      - name: configure
        run: |
          mkdir build
          cd build
          cmake -GNinja -DTRACY_ENABLE=ON ..

      - name: compile
        run: ninja -C build
